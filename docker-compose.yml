version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aiagent-postgres
    environment:
      POSTGRES_DB: aiagent
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - aiagent-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: aiagent-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=aiagent;Username=postgres;Password=postgres
    ports:
      - "5000:8080"
    depends_on:
      - postgres
    networks:
      - aiagent-network
    volumes:
      - ./backend:/app
    command: ["dotnet", "watch", "run", "--urls", "http://0.0.0.0:8080"]

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: aiagent-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - aiagent-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:5000

  # N8N (Optional - for workflow automation)
  n8n:
    image: n8nio/n8n:latest
    container_name: aiagent-n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - WEBHOOK_URL=http://localhost:5678/
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - aiagent-network

volumes:
  postgres_data:
  n8n_data:

networks:
  aiagent-network:
    driver: bridge